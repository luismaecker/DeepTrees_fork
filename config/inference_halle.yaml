name: inference-halle
data:
  _target_: treecrowndelineation.dataloading.datamodule.TreeCrownDelineationDataModule
  rasters: /work/ka1176/shared_data/2024-ufz-deeptree/polygon-labelling/tiles  # directory with raster images
  masks: null
  outlines: null
  distance_transforms: null
  batch_size: 1          # dataloader batch size
  ndvi_config:
    concatenate: True    # If True, concatenate NDVI
    rescale: True        # If True, rescale to [0, 1]
    red: 0               # Index of Red channel
    nir: 3               # Index of Infrared channel
  divide_by: 255         # divisor
  dilate_outlines: False # dilate the outlines by number of pixels
  ground_truth_config:
    labels: null
    class_column_name: class # class column in label file
    crs: EPSG:25832        # reference CRS
    valid_class_ids: all   # specify IDs that you want to use here (default: all)
    nproc: 8               # number of workers in preprocessing
  num_workers: 8         # Number of workers in dataloader
pretrained:
  # path to pretrained models
  path: /work/ka1176/shared_data/2024-ufz-deeptree/pretrained_models/tcd-20cm-RGBI-v1/
  model: Unet-resnet18_epochs=209_lr=0.0001_width=224_bs=32_divby=255_custom_color_augs_k=0_jitted.pt 
  
model:
  _target_: treecrowndelineation.model.tcd_model.TreeCrownDelineationModel
  in_channels: 5         # Number of input channels / bands of the input image
  architecture: Unet     # segmentation model architecture
  backbone: resnet18     # backbone
  lr: 0.0003             # learning rate
  mask_iou_share: 0.5   # contribution of masks (vs outline) to overall IOU.
  freeze_layers: False   # freeze layers (keep only segmentation head trainable)
  track_running_stats: True # update batch norm layers
logdir: ${hydra.run.dir} # this is where we find logs, trained models, predictions
model_name: unet-halle # short and memorable model name
seed: null               # Fix random seed 

callbacks:
  model_summary:
    _target_: lightning.pytorch.callbacks.RichModelSummary
    max_depth: -1

  rich_progress_bar:
    _target_: lightning.pytorch.callbacks.RichProgressBar

trainer:
  _target_: lightning.Trainer
  devices: 1               # Number of devices (GPUs) to use
  accelerator: auto        # Choose GPU if available

hydra:
  job:
    chdir: True
  run:
    dir: experiments/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}